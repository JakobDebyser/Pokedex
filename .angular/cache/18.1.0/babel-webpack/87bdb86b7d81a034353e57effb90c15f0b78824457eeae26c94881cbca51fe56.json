{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { TYPE_COLOURS } from './../../interfaces';\nimport { Component } from '@angular/core';\nlet PokemonHomepageComponent = class PokemonHomepageComponent {\n  constructor(service) {\n    this.service = service;\n  }\n  ngOnInit() {\n    console.log(\"current generation: \", this.currentGeneration);\n    this.service.getGenerations().subscribe(data => {\n      this.generations = data;\n      console.log(data);\n    });\n    this.service.getGeneration(2).subscribe(data => {\n      console.log(data);\n    });\n    this.getPokemons();\n  }\n  onGenerationSelected(event) {\n    let index = event.target[\"selectedIndex\"] - 1;\n    console.log(\"index: \" + index);\n    // this.service.getGeneration(this.generationSelected).subscribe(data=>{this.generationSelected=data.name;console.log(\"data:\",data)})\n    // console.log(\"generation selected: \",this.generationSelected)\n    // console.log(\"current generation: \",this.currentGeneration)\n  }\n  onTypeSelected() {}\n  getPokemons() {\n    this.service.getPokemons().subscribe(data => {\n      this.pokemons = data;\n      this.pokemons.results.forEach(pokemon => {\n        pokemon.id = pokemon.url.split('/')[pokemon.url.split('/').length - 2];\n        this.getPokemonDetails(pokemon);\n      });\n    });\n  }\n  getPokemonDetails(pokemon) {\n    this.service.getPokemonDetails(pokemon.name).subscribe(details => {\n      pokemon.details = details;\n    });\n  }\n  getTypeColours(type) {\n    if (type) {\n      return '#' + TYPE_COLOURS[type];\n    }\n  }\n};\nPokemonHomepageComponent = __decorate([Component({\n  selector: 'app-pokemon-homepage',\n  templateUrl: './pokemon-homepage.component.html',\n  styleUrls: ['./pokemon-homepage.component.css']\n})], PokemonHomepageComponent);\nexport { PokemonHomepageComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}